/*
 * Copyright 2017 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
dependencies {
    implementation project(':az-core')
    implementation project(':azkaban-spi')
    implementation project(':azkaban-db')
    implementation project(':cached-http-filesystem')

    implementation deps.collections
    implementation deps.dbcp2
    implementation deps.dbutils
    implementation deps.fileupload
    implementation deps.guava
    implementation deps.gson
    compileOnly deps.hadoopAnnotations
    compileOnly deps.hadoopAuth
    compileOnly deps.hadoopCommon
    compileOnly deps.hadoopHdfs
    implementation deps.hadoopMRClientCommon
    implementation deps.hadoopMRClientCore
    implementation deps.httpclient
    implementation deps.jetty
    implementation deps.jettyUtil
    implementation deps.jopt
    implementation deps.k8sClient
    implementation (deps.k8sClientFluent) {
        exclude module: 'builder-annotations'
    }
    implementation deps.mail
    implementation deps.math3
    implementation deps.metricsCore
    implementation deps.metricsJvm
    implementation deps.mysqlConnector
    implementation deps.snakeyaml
    implementation deps.velocity
    implementation deps.kafkaLog4jAppender

    testRuntimeOnly  deps.h2

    testImplementation deps.hadoopAnnotations
    testImplementation deps.hadoopAuth
    testImplementation deps.hadoopCommon
    testImplementation deps.hadoopHdfs
    testImplementation project(':test')
    testImplementation project(path: ':azkaban-db', configuration: 'testOutput')
    testImplementation deps.commonsCompress
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
